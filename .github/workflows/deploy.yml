name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-leadforce
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BASE_DIR: /srv/leadforce
      TARGET_DIR: /srv/leadforce/app
      SERVICE_NAME: leadforce
      SERVICE_USER: leadforce
      REPO_SSH: git@github.com:${{ github.repository }}.git

    steps:
      - name: Checkout (meta only)
        uses: actions/checkout@v4

      - name: Prepare VPS (git, venv, user, ssh known_hosts)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          fingerprint: ${{ secrets.VPS_FINGERPRINT }}
          script: |
            set -euo pipefail
            # Packages
            sudo apt-get update -y
            sudo apt-get install -y git python3 python3-venv

            # Ensure service user and home
            if ! id "${{ env.SERVICE_USER }}" >/dev/null 2>&1; then
              sudo useradd -m -d "${{ env.BASE_DIR }}" -s /bin/bash "${{ env.SERVICE_USER }}"
            else
              sudo usermod -d "${{ env.BASE_DIR }}" "${{ env.SERVICE_USER }}"
              sudo chsh -s /bin/bash "${{ env.SERVICE_USER }}"
            fi

            # Dirs & venv
            sudo mkdir -p "${{ env.BASE_DIR }}" "${{ env.TARGET_DIR }}" "${{ env.BASE_DIR }}/logs" "${{ env.BASE_DIR }}/run"
            sudo python3 -m venv "${{ env.BASE_DIR }}/venv" || true
            sudo chown -R "${{ env.SERVICE_USER }}":"${{ env.SERVICE_USER }}" "${{ env.BASE_DIR }}"
            sudo chmod -R u=rwX,g=rX,o= "${{ env.BASE_DIR }}"

            # ~/.ssh для leadforce (БЕЗ /usr/bin/install)
            sudo mkdir -p "${{ env.BASE_DIR }}/.ssh"
            sudo chown "${{ env.SERVICE_USER }}":"${{ env.SERVICE_USER }}" "${{ env.BASE_DIR }}/.ssh"
            sudo chmod 700 "${{ env.BASE_DIR }}/.ssh"

            # known_hosts под leadforce
            sudo -u "${{ env.SERVICE_USER }}" bash -lc 'ssh-keyscan github.com >> ~/.ssh/known_hosts || true'
            sudo -u "${{ env.SERVICE_USER }}" chmod 600 "${{ env.BASE_DIR }}/.ssh/known_hosts"

            # Проверяем deploy-key
            if [ ! -f "${{ env.BASE_DIR }}/.ssh/github_deploy" ]; then
              echo "Deploy key not found: ${{ env.BASE_DIR }}/.ssh/github_deploy"
              echo "Create on VPS: sudo -u ${{ env.SERVICE_USER }} ssh-keygen -t ed25519 -N \"\" -f ${{ env.BASE_DIR }}/.ssh/github_deploy"
              echo "Then add PUBLIC key (.pub) to GitHub → Settings → Deploy keys."
              exit 1
            fi
            sudo -u "${{ env.SERVICE_USER }}" chmod 600 "${{ env.BASE_DIR }}/.ssh/github_deploy"
            sudo -u "${{ env.SERVICE_USER }}" chmod 644 "${{ env.BASE_DIR }}/.ssh/github_deploy.pub"

      - name: Pull & install on VPS (no SCP)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          fingerprint: ${{ secrets.VPS_FINGERPRINT }}
          script: |
            set -euo pipefail
            APP_DIR="${{ env.TARGET_DIR }}"
            VENV_BIN="${{ env.BASE_DIR }}/venv/bin"
            GIT_SSH_CMD='ssh -i /srv/leadforce/.ssh/github_deploy -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes'

            # Clone or update
            if [ ! -d "$APP_DIR/.git" ]; then
              sudo -u "${{ env.SERVICE_USER }}" bash -lc "GIT_SSH_COMMAND='$GIT_SSH_CMD' git clone --depth=1 '${{ env.REPO_SSH }}' '$APP_DIR'"
            else
              sudo -u "${{ env.SERVICE_USER }}" bash -lc "cd '$APP_DIR' && GIT_SSH_COMMAND='$GIT_SSH_CMD' git fetch --prune && git reset --hard origin/main && git clean -fdx"
            fi

            # Python deps
            sudo -u "${{ env.SERVICE_USER }}" "$VENV_BIN/pip" install --upgrade pip wheel setuptools
            if [ -f "$APP_DIR/requirements.txt" ]; then
              sudo -u "${{ env.SERVICE_USER }}" "$VENV_BIN/pip" install -r "$APP_DIR/requirements.txt"
            fi

            # Restart service
            sudo systemctl daemon-reload || true
            sudo systemctl restart "${{ env.SERVICE_NAME }}"

      - name: Healthcheck (local)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          fingerprint: ${{ secrets.VPS_FINGERPRINT }}
          script: |
            set -euo pipefail
            sudo systemctl status "${{ env.SERVICE_NAME }}" --no-pager -l || true
            curl -sf -m 5 http://127.0.0.1:12345/ >/dev/null && echo "OK" || (echo "Healthcheck failed" && exit 1)
